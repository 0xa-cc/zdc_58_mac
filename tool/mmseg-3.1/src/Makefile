# Makefile.in generated by automake 1.9.6 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





srcdir = .
top_srcdir = ..

pkgdatadir = $(datadir)/mmseg
pkglibdir = $(libdir)/mmseg
pkgincludedir = $(includedir)/mmseg
top_builddir = ..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-apple-darwin15.2.0
host_triplet = i686-apple-darwin15.2.0
bin_PROGRAMS = mmseg$(EXEEXT)
subdir = src
DIST_COMMON = $(pkginclude_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/config/readline.m4 \
	$(top_srcdir)/config/sys_errlist.m4 \
	$(top_srcdir)/config/sys_siglist.m4 $(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/config/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(pkgincludedir)"
libLTLIBRARIES_INSTALL = $(INSTALL)
LTLIBRARIES = $(lib_LTLIBRARIES)
libmmseg_la_DEPENDENCIES =
am_libmmseg_la_OBJECTS = mmthunk.lo SegmenterManager.lo \
	SynonymsDict.lo UnigramDict.lo segmenter.lo SegmentPkg.lo \
	UnigramCorpusReader.lo UnigramRecord.lo dictionary.lo \
	iniparser.lo assert.lo bsd_getopt.lo csr_mmap.lo csr_utils.lo \
	Utf8_16.lo StringTokenizer.lo
libmmseg_la_OBJECTS = $(am_libmmseg_la_OBJECTS)
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am_mmseg_OBJECTS = mmseg_main.$(OBJEXT)
mmseg_OBJECTS = $(am_mmseg_OBJECTS)
mmseg_DEPENDENCIES = $(top_builddir)/src/libmmseg.la
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(libmmseg_la_SOURCES) $(mmseg_SOURCES)
DIST_SOURCES = $(libmmseg_la_SOURCES) $(mmseg_SOURCES)
pkgincludeHEADERS_INSTALL = $(INSTALL_HEADER)
HEADERS = $(pkginclude_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = aclocal-1.9
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = tar
AR = ar
AUTOCONF = autoconf
AUTOHEADER = autoheader
AUTOMAKE = automake-1.9
AWK = awk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO = /bin/echo
ECHO_C = \c
ECHO_N = 
ECHO_T = 
EGREP = grep -E
EXEEXT = 
F77 = 
FFLAGS = 
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
LDFLAGS = 
LIBOBJS =  $U.o
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LN_S = ln -s
LTLIBOBJS =  $U.lo
MAKEINFO = makeinfo
OBJEXT = o
PACKAGE = mmseg
PACKAGE_BUGREPORT = 
PACKAGE_NAME = 
PACKAGE_STRING = 
PACKAGE_TARNAME = 
PACKAGE_VERSION = 
PATH_SEPARATOR = :
RANLIB = ranlib
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
VERSION = 0.7
WITH_READLINE_FALSE = 
WITH_READLINE_TRUE = #
ac_aux_dir = config
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_F77 = 
ac_ct_RANLIB = ranlib
ac_ct_STRIP = strip
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = i686-apple-darwin15.2.0
build_alias = 
build_cpu = i686
build_os = darwin15.2.0
build_vendor = apple
datadir = ${prefix}/share
exec_prefix = ${prefix}
host = i686-apple-darwin15.2.0
host_alias = 
host_cpu = i686
host_os = darwin15.2.0
host_vendor = apple
includedir = ${prefix}/include
infodir = ${prefix}/info
install_sh = /Users/zhudongchang/WorkData/tool/mmseg-3.1/config/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localstatedir = ${prefix}/var
mandir = ${prefix}/man
mkdir_p = $(mkinstalldirs)
oldincludedir = /usr/include
prefix = /usr/local/mmseg3
program_transform_name = s,x,x,
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target_alias = 
MAINTAINERCLEANFILES = Makefile.in common.h stamp-common
EXTRA_DIST = common-h.in
AM_CFLAGS = -fPIC	
AM_CPPFLAGS = -fPIC -I$(top_builddir) -I$(top_srcdir) -I$(top_srcdir)/src/css -I$(top_srcdir)/src/utils -D_REENTRANT -D_LARGEFILE64_SOURCE 
pkginclude_HEADERS = css/ICorpusReader.h  css/SegmenterManager.h  css/tolowercase.h css/UnigramRecord.h \
							css/mmthunk.h        css/SegmentPkg.h        css/UnigramCorpusReader.h	\
							css/Segmenter.h      css/SynonymsDict.h      css/UnigramDict.h	\
							utils/csr_mmap.h   utils/darts.h     utils/scoped_ptr.h       utils/Utf8_16.h	\
							utils/csr_assert.h  utils/csr_pool.h   utils/freelist.h  utils/Singleton.h	\
							utils/csr.h         utils/csr_utils.h  utils/os.h        utils/StringTokenizer.h	\
							csr_typedefs.h


#noinst_HEADERS	= 
lib_LTLIBRARIES = libmmseg.la
libmmseg_la_LIBADD = 
libmmseg_la_LDFLAGS = -static
libmmseg_la_SOURCES = css/mmthunk.cpp	css/SegmenterManager.cpp  css/SynonymsDict.cpp	\
	css/UnigramDict.cpp css/segmenter.cpp  css/SegmentPkg.cpp \
	css/UnigramCorpusReader.cpp  css/UnigramRecord.cpp	\
	iniparser/dictionary.c  iniparser/iniparser.c \
	utils/assert.c  utils/bsd_getopt.c  utils/csr_mmap.c  utils/csr_utils.c	utils/Utf8_16.cpp utils/StringTokenizer.cpp

mmseg_LDADD = $(top_builddir)/src/libmmseg.la 
mmseg_SOURCES = mmseg_main.cpp
all: all-am

.SUFFIXES:
.SUFFIXES: .c .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(mkdir_p) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@set -x; list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " $(LIBTOOL) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  $(LIBTOOL) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$p"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libmmseg.la: $(libmmseg_la_OBJECTS) $(libmmseg_la_DEPENDENCIES) 
	$(CXXLINK) -rpath $(libdir) $(libmmseg_la_LDFLAGS) $(libmmseg_la_OBJECTS) $(libmmseg_la_LIBADD) $(LIBS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(mkdir_p) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
mmseg$(EXEEXT): $(mmseg_OBJECTS) $(mmseg_DEPENDENCIES) 
	@rm -f mmseg$(EXEEXT)
	$(CXXLINK) $(mmseg_LDFLAGS) $(mmseg_OBJECTS) $(mmseg_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/SegmentPkg.Plo
include ./$(DEPDIR)/SegmenterManager.Plo
include ./$(DEPDIR)/StringTokenizer.Plo
include ./$(DEPDIR)/SynonymsDict.Plo
include ./$(DEPDIR)/UnigramCorpusReader.Plo
include ./$(DEPDIR)/UnigramDict.Plo
include ./$(DEPDIR)/UnigramRecord.Plo
include ./$(DEPDIR)/Utf8_16.Plo
include ./$(DEPDIR)/assert.Plo
include ./$(DEPDIR)/bsd_getopt.Plo
include ./$(DEPDIR)/csr_mmap.Plo
include ./$(DEPDIR)/csr_utils.Plo
include ./$(DEPDIR)/dictionary.Plo
include ./$(DEPDIR)/iniparser.Plo
include ./$(DEPDIR)/mmseg_main.Po
include ./$(DEPDIR)/mmthunk.Plo
include ./$(DEPDIR)/segmenter.Plo

.c.o:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	if $(LTCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

dictionary.lo: iniparser/dictionary.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dictionary.lo -MD -MP -MF "$(DEPDIR)/dictionary.Tpo" -c -o dictionary.lo `test -f 'iniparser/dictionary.c' || echo '$(srcdir)/'`iniparser/dictionary.c; \
	then mv -f "$(DEPDIR)/dictionary.Tpo" "$(DEPDIR)/dictionary.Plo"; else rm -f "$(DEPDIR)/dictionary.Tpo"; exit 1; fi
#	source='iniparser/dictionary.c' object='dictionary.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dictionary.lo `test -f 'iniparser/dictionary.c' || echo '$(srcdir)/'`iniparser/dictionary.c

iniparser.lo: iniparser/iniparser.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT iniparser.lo -MD -MP -MF "$(DEPDIR)/iniparser.Tpo" -c -o iniparser.lo `test -f 'iniparser/iniparser.c' || echo '$(srcdir)/'`iniparser/iniparser.c; \
	then mv -f "$(DEPDIR)/iniparser.Tpo" "$(DEPDIR)/iniparser.Plo"; else rm -f "$(DEPDIR)/iniparser.Tpo"; exit 1; fi
#	source='iniparser/iniparser.c' object='iniparser.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o iniparser.lo `test -f 'iniparser/iniparser.c' || echo '$(srcdir)/'`iniparser/iniparser.c

assert.lo: utils/assert.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT assert.lo -MD -MP -MF "$(DEPDIR)/assert.Tpo" -c -o assert.lo `test -f 'utils/assert.c' || echo '$(srcdir)/'`utils/assert.c; \
	then mv -f "$(DEPDIR)/assert.Tpo" "$(DEPDIR)/assert.Plo"; else rm -f "$(DEPDIR)/assert.Tpo"; exit 1; fi
#	source='utils/assert.c' object='assert.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o assert.lo `test -f 'utils/assert.c' || echo '$(srcdir)/'`utils/assert.c

bsd_getopt.lo: utils/bsd_getopt.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bsd_getopt.lo -MD -MP -MF "$(DEPDIR)/bsd_getopt.Tpo" -c -o bsd_getopt.lo `test -f 'utils/bsd_getopt.c' || echo '$(srcdir)/'`utils/bsd_getopt.c; \
	then mv -f "$(DEPDIR)/bsd_getopt.Tpo" "$(DEPDIR)/bsd_getopt.Plo"; else rm -f "$(DEPDIR)/bsd_getopt.Tpo"; exit 1; fi
#	source='utils/bsd_getopt.c' object='bsd_getopt.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bsd_getopt.lo `test -f 'utils/bsd_getopt.c' || echo '$(srcdir)/'`utils/bsd_getopt.c

csr_mmap.lo: utils/csr_mmap.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT csr_mmap.lo -MD -MP -MF "$(DEPDIR)/csr_mmap.Tpo" -c -o csr_mmap.lo `test -f 'utils/csr_mmap.c' || echo '$(srcdir)/'`utils/csr_mmap.c; \
	then mv -f "$(DEPDIR)/csr_mmap.Tpo" "$(DEPDIR)/csr_mmap.Plo"; else rm -f "$(DEPDIR)/csr_mmap.Tpo"; exit 1; fi
#	source='utils/csr_mmap.c' object='csr_mmap.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o csr_mmap.lo `test -f 'utils/csr_mmap.c' || echo '$(srcdir)/'`utils/csr_mmap.c

csr_utils.lo: utils/csr_utils.c
	if $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT csr_utils.lo -MD -MP -MF "$(DEPDIR)/csr_utils.Tpo" -c -o csr_utils.lo `test -f 'utils/csr_utils.c' || echo '$(srcdir)/'`utils/csr_utils.c; \
	then mv -f "$(DEPDIR)/csr_utils.Tpo" "$(DEPDIR)/csr_utils.Plo"; else rm -f "$(DEPDIR)/csr_utils.Tpo"; exit 1; fi
#	source='utils/csr_utils.c' object='csr_utils.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o csr_utils.lo `test -f 'utils/csr_utils.c' || echo '$(srcdir)/'`utils/csr_utils.c

.cpp.o:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	if $(LTCXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

mmthunk.lo: css/mmthunk.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mmthunk.lo -MD -MP -MF "$(DEPDIR)/mmthunk.Tpo" -c -o mmthunk.lo `test -f 'css/mmthunk.cpp' || echo '$(srcdir)/'`css/mmthunk.cpp; \
	then mv -f "$(DEPDIR)/mmthunk.Tpo" "$(DEPDIR)/mmthunk.Plo"; else rm -f "$(DEPDIR)/mmthunk.Tpo"; exit 1; fi
#	source='css/mmthunk.cpp' object='mmthunk.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mmthunk.lo `test -f 'css/mmthunk.cpp' || echo '$(srcdir)/'`css/mmthunk.cpp

SegmenterManager.lo: css/SegmenterManager.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SegmenterManager.lo -MD -MP -MF "$(DEPDIR)/SegmenterManager.Tpo" -c -o SegmenterManager.lo `test -f 'css/SegmenterManager.cpp' || echo '$(srcdir)/'`css/SegmenterManager.cpp; \
	then mv -f "$(DEPDIR)/SegmenterManager.Tpo" "$(DEPDIR)/SegmenterManager.Plo"; else rm -f "$(DEPDIR)/SegmenterManager.Tpo"; exit 1; fi
#	source='css/SegmenterManager.cpp' object='SegmenterManager.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SegmenterManager.lo `test -f 'css/SegmenterManager.cpp' || echo '$(srcdir)/'`css/SegmenterManager.cpp

SynonymsDict.lo: css/SynonymsDict.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SynonymsDict.lo -MD -MP -MF "$(DEPDIR)/SynonymsDict.Tpo" -c -o SynonymsDict.lo `test -f 'css/SynonymsDict.cpp' || echo '$(srcdir)/'`css/SynonymsDict.cpp; \
	then mv -f "$(DEPDIR)/SynonymsDict.Tpo" "$(DEPDIR)/SynonymsDict.Plo"; else rm -f "$(DEPDIR)/SynonymsDict.Tpo"; exit 1; fi
#	source='css/SynonymsDict.cpp' object='SynonymsDict.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SynonymsDict.lo `test -f 'css/SynonymsDict.cpp' || echo '$(srcdir)/'`css/SynonymsDict.cpp

UnigramDict.lo: css/UnigramDict.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT UnigramDict.lo -MD -MP -MF "$(DEPDIR)/UnigramDict.Tpo" -c -o UnigramDict.lo `test -f 'css/UnigramDict.cpp' || echo '$(srcdir)/'`css/UnigramDict.cpp; \
	then mv -f "$(DEPDIR)/UnigramDict.Tpo" "$(DEPDIR)/UnigramDict.Plo"; else rm -f "$(DEPDIR)/UnigramDict.Tpo"; exit 1; fi
#	source='css/UnigramDict.cpp' object='UnigramDict.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o UnigramDict.lo `test -f 'css/UnigramDict.cpp' || echo '$(srcdir)/'`css/UnigramDict.cpp

segmenter.lo: css/segmenter.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT segmenter.lo -MD -MP -MF "$(DEPDIR)/segmenter.Tpo" -c -o segmenter.lo `test -f 'css/segmenter.cpp' || echo '$(srcdir)/'`css/segmenter.cpp; \
	then mv -f "$(DEPDIR)/segmenter.Tpo" "$(DEPDIR)/segmenter.Plo"; else rm -f "$(DEPDIR)/segmenter.Tpo"; exit 1; fi
#	source='css/segmenter.cpp' object='segmenter.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o segmenter.lo `test -f 'css/segmenter.cpp' || echo '$(srcdir)/'`css/segmenter.cpp

SegmentPkg.lo: css/SegmentPkg.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SegmentPkg.lo -MD -MP -MF "$(DEPDIR)/SegmentPkg.Tpo" -c -o SegmentPkg.lo `test -f 'css/SegmentPkg.cpp' || echo '$(srcdir)/'`css/SegmentPkg.cpp; \
	then mv -f "$(DEPDIR)/SegmentPkg.Tpo" "$(DEPDIR)/SegmentPkg.Plo"; else rm -f "$(DEPDIR)/SegmentPkg.Tpo"; exit 1; fi
#	source='css/SegmentPkg.cpp' object='SegmentPkg.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SegmentPkg.lo `test -f 'css/SegmentPkg.cpp' || echo '$(srcdir)/'`css/SegmentPkg.cpp

UnigramCorpusReader.lo: css/UnigramCorpusReader.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT UnigramCorpusReader.lo -MD -MP -MF "$(DEPDIR)/UnigramCorpusReader.Tpo" -c -o UnigramCorpusReader.lo `test -f 'css/UnigramCorpusReader.cpp' || echo '$(srcdir)/'`css/UnigramCorpusReader.cpp; \
	then mv -f "$(DEPDIR)/UnigramCorpusReader.Tpo" "$(DEPDIR)/UnigramCorpusReader.Plo"; else rm -f "$(DEPDIR)/UnigramCorpusReader.Tpo"; exit 1; fi
#	source='css/UnigramCorpusReader.cpp' object='UnigramCorpusReader.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o UnigramCorpusReader.lo `test -f 'css/UnigramCorpusReader.cpp' || echo '$(srcdir)/'`css/UnigramCorpusReader.cpp

UnigramRecord.lo: css/UnigramRecord.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT UnigramRecord.lo -MD -MP -MF "$(DEPDIR)/UnigramRecord.Tpo" -c -o UnigramRecord.lo `test -f 'css/UnigramRecord.cpp' || echo '$(srcdir)/'`css/UnigramRecord.cpp; \
	then mv -f "$(DEPDIR)/UnigramRecord.Tpo" "$(DEPDIR)/UnigramRecord.Plo"; else rm -f "$(DEPDIR)/UnigramRecord.Tpo"; exit 1; fi
#	source='css/UnigramRecord.cpp' object='UnigramRecord.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o UnigramRecord.lo `test -f 'css/UnigramRecord.cpp' || echo '$(srcdir)/'`css/UnigramRecord.cpp

Utf8_16.lo: utils/Utf8_16.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Utf8_16.lo -MD -MP -MF "$(DEPDIR)/Utf8_16.Tpo" -c -o Utf8_16.lo `test -f 'utils/Utf8_16.cpp' || echo '$(srcdir)/'`utils/Utf8_16.cpp; \
	then mv -f "$(DEPDIR)/Utf8_16.Tpo" "$(DEPDIR)/Utf8_16.Plo"; else rm -f "$(DEPDIR)/Utf8_16.Tpo"; exit 1; fi
#	source='utils/Utf8_16.cpp' object='Utf8_16.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Utf8_16.lo `test -f 'utils/Utf8_16.cpp' || echo '$(srcdir)/'`utils/Utf8_16.cpp

StringTokenizer.lo: utils/StringTokenizer.cpp
	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT StringTokenizer.lo -MD -MP -MF "$(DEPDIR)/StringTokenizer.Tpo" -c -o StringTokenizer.lo `test -f 'utils/StringTokenizer.cpp' || echo '$(srcdir)/'`utils/StringTokenizer.cpp; \
	then mv -f "$(DEPDIR)/StringTokenizer.Tpo" "$(DEPDIR)/StringTokenizer.Plo"; else rm -f "$(DEPDIR)/StringTokenizer.Tpo"; exit 1; fi
#	source='utils/StringTokenizer.cpp' object='StringTokenizer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o StringTokenizer.lo `test -f 'utils/StringTokenizer.cpp' || echo '$(srcdir)/'`utils/StringTokenizer.cpp

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:
install-pkgincludeHEADERS: $(pkginclude_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(pkgincludedir)" || $(mkdir_p) "$(DESTDIR)$(pkgincludedir)"
	@list='$(pkginclude_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(pkgincludeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(pkgincludedir)/$$f'"; \
	  $(pkgincludeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(pkgincludedir)/$$f"; \
	done

uninstall-pkgincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(pkginclude_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(pkgincludedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(pkgincludedir)/$$f"; \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	$(mkdir_p) $(distdir)/css $(distdir)/utils
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	$(MAKE) $(AM_MAKEFLAGS) \
	  top_distdir="$(top_distdir)" distdir="$(distdir)" \
	  dist-hook
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(HEADERS)
install-binPROGRAMS: install-libLTLIBRARIES

installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(pkgincludedir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-pkgincludeHEADERS

install-exec-am: install-binPROGRAMS install-libLTLIBRARIES

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-info-am \
	uninstall-libLTLIBRARIES uninstall-pkgincludeHEADERS

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libLTLIBRARIES clean-libtool ctags \
	dist-hook distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-exec install-exec-am \
	install-info install-info-am install-libLTLIBRARIES \
	install-man install-pkgincludeHEADERS install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-info-am uninstall-libLTLIBRARIES \
	uninstall-pkgincludeHEADERS


# Regenerate common.h with config.status whenever common-h.in changes.
common.h: stamp-common
	@:
stamp-common: $(srcdir)/common-h.in $(top_builddir)/config.status
	cd $(top_builddir) \
	  && CONFIG_FILES= CONFIG_HEADERS= CONFIG_OTHER=sic/common.h \
	  $(SHELL) ./config.status
	echo timestamp > $@

# Don't distribute common.h, since it is build host dependent!
dist-hook:
	rm -f $(distdir)/common.h
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
